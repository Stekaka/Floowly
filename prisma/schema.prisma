// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Company {
  id        String   @id @default(cuid())
  name      String   @unique
  domain    String?
  plan      String   @default("professional")
  maxUsers  Int      @default(50)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[]

  @@map("companies")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  fullName  String?
  phone     String?
  avatar    String?
  role      String   @default("user")
  status    String   @default("active")
  companyId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  company Company? @relation(fields: [companyId], references: [id], onDelete: SetNull)

  @@map("users")
}

model Customer {
 id        String   @id @default(cuid())
 name      String
 company   String?
 email     String?
 phone     String
 address   String?  // Changed from Json to String for SQLite compatibility
 tags      String   @default("[]") // Changed from String[] to String for SQLite compatibility
 status    String   @default("active")
 createdAt DateTime @default(now())
 updatedAt DateTime @updatedAt

 quotes Quote[]
 jobs   Job[]

 @@map("customers")
}

model Quote {
 id          String   @id @default(cuid())
 customerId  String
 title       String
 description String?
 items       String   // Changed from Json to String for SQLite compatibility
 subtotal    Float    // Changed from Decimal to Float for SQLite compatibility
 taxAmount   Float    // Changed from Decimal to Float for SQLite compatibility
 total       Float    // Changed from Decimal to Float for SQLite compatibility
 status      QuoteStatus @default(draft)
 hours       Float?    // Changed from Decimal to Float for SQLite compatibility
 materialCost Float?   // Changed from Decimal to Float for SQLite compatibility
 markupPercentage Float? // Changed from Decimal to Float for SQLite compatibility
 profitEstimate Float? // Changed from Decimal to Float for SQLite compatibility
 expiresAt   DateTime?
 createdAt   DateTime @default(now())
 updatedAt   DateTime @updatedAt

 customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
 jobs       Job[]

 @@map("quotes")
}

model Job {
 id            String   @id @default(cuid())
 customerId    String
 quoteId       String?
 title         String
 description   String?
 startDate     DateTime
 endDate       DateTime
 startTime     String?
 endTime       String?
 hours         Float?    // Changed from Decimal to Float for SQLite compatibility
 materialCost  Float?    // Changed from Decimal to Float for SQLite compatibility
 quotedPrice   Float?    // Changed from Decimal to Float for SQLite compatibility
 status        JobStatus @default(pending)
 notes         String?
 timezone      String   @default("Europe/Stockholm")
 createdAt     DateTime @default(now())
 updatedAt     DateTime @updatedAt

 customer      Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
 quote         Quote?   @relation(fields: [quoteId], references: [id], onDelete: SetNull)

 @@map("jobs")
}

enum QuoteStatus {
 draft
 sent
 accepted
 rejected
 expired
}

enum JobStatus {
 pending
 confirmed
 in_progress
 completed
 cancelled
}
